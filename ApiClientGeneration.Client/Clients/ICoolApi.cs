// <auto-generated>
//     This code was generated by Refitter.
// </auto-generated>


using Refit;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using ApiClientGeneration.Client.Contracts;

#nullable enable annotations

namespace ApiClientGeneration.Client.Clients
{
    [System.CodeDom.Compiler.GeneratedCode("Refitter", "1.5.2.0")]
    public partial interface ICoolApi
    {
        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// <item>
        /// <term>400</term>
        /// <description>Bad Request</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Unauthorized</description>
        /// </item>
        /// </list>
        /// </returns>
        [Get("/api/v1/cool/user/{userId}")]
        Task<IApiResponse<User>> UserGETAsync(int userId, CancellationToken cancellationToken = default);

        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// <item>
        /// <term>400</term>
        /// <description>Bad Request</description>
        /// </item>
        /// </list>
        /// </returns>
        [Delete("/api/v1/cool/user/{userId}")]
        Task<IApiResponse<User>> UserDELETEAsync(int userId, CancellationToken cancellationToken = default);

        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// <item>
        /// <term>400</term>
        /// <description>Bad Request</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Unauthorized</description>
        /// </item>
        /// </list>
        /// </returns>
        [Get("/api/v1/cool/user/{userId}/types")]
        Task<IApiResponse<User>> TypesAsync(int userId, [Query(CollectionFormat.Multi), AliasAs("UserTypes")] IEnumerable<UserType> userTypes, [Query, AliasAs("Some")] string some, CancellationToken cancellationToken = default);

        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// <item>
        /// <term>400</term>
        /// <description>Bad Request</description>
        /// </item>
        /// </list>
        /// </returns>
        [Get("/api/v1/cool/users")]
        Task<IApiResponse<User>> UsersAsync(CancellationToken cancellationToken = default);

        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>201</term>
        /// <description>Created</description>
        /// </item>
        /// <item>
        /// <term>400</term>
        /// <description>Bad Request</description>
        /// </item>
        /// </list>
        /// </returns>
        [Post("/api/v1/cool/user")]
        Task<IApiResponse<bool>> UserPOSTAsync([Body] User body, CancellationToken cancellationToken = default);
    }

}